[ver 05]

program ::= { statement } EOF
statement   ::= statemntAssign
pstatementAssign    ::= primary ASSIGN expression SEMI

expression ::= term{expressionAdd | expressionSub}
expressionAdd ::= PLUS term
expressionSub ::= MINUS term

term ::= factor {termMult | termDiv}
termMult ::= MULT factor
termDiv ::= Div factor

factor ::= plusFactor | minusFactor | unsignedFactor
plusFactor ::= PLUS unsignedFactor
minusFactor ::= MINUS unsignedFactor
unsignedFactor ::= factorAmp | number | LPAR expression RPAR | addressToValue
addressToValue ::= primary
factorAmp ::= AMP (number | primary)
primary ::= primaryMult | variable
primaryMult ::= MULT variable
variable ::= ident [array]
array ::= LBRA expression RBRA
ident ::= IDENT
number ::= NUM
-----------------------------------------------------------------------
[change]

condition ::= TRUE | FALSE | expression(conditionLT | conditionLE | conditionGT
                                      | conditionGE | conditionEQ | conditionNE)
conditionLT ::= LT expression //<
conditionLE ::= LE expression //<=
conditionGT ::= GT expression //>
conditionGE ::= GE expression //>=
conditionEQ ::= EQ expression //==
conditionNE ::= NE expression //!=

-----------------------------------------------------------------------
[ver 06]

