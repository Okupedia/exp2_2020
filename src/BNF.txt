[ver 03]

program ::= expression EOF
expression ::= term{expressionAdd | expressionSub}
expressionAdd ::= PLUS term
expressionSub ::= MINUS term
term ::= factor {termMult | termDiv}
termMult ::= MULT factor
termDiv ::= Div factor
factor ::= plusFactor | minusFactor | unsignedFactor
plusFactor ::= PLUS unsignedFactor
minusFactor ::= MINUS unsignedFactor
unsignedFactor ::= factorAmp | number | LPAR expression RPAR
factorAmp ::= AMP number
number ::= NUM

-----------------------------------------------------------------------
[change]

unsignedFactor ::= factorAmp | number | LPAR expression RPAR | addressToValue
addressToValue ::= primary
factorAmp ::= AMP (number | primary)
primary ::= primaryMult | variable
primaryMult ::= MULT variable
variable ::= ident [array]
array ::= LBRA expression RBRA
ident ::= IDENT

-----------------------------------------------------------------------
[ver 04]

program ::= expression EOF
expression ::= term{expressionAdd | expressionSub}
expressionAdd ::= PLUS term
expressionSub ::= MINUS term

term ::= factor {termMult | termDiv}
termMult ::= MULT factor
termDiv ::= Div factor

factor ::= plusFactor | minusFactor | unsignedFactor
plusFactor ::= PLUS unsignedFactor
minusFactor ::= MINUS unsignedFactor
unsignedFactor ::= factorAmp | number | LPAR expression RPAR | addressToValue
addressToValue ::= primary
factorAmp ::= AMP (number | primary)
primary ::= primaryMult | variable
primaryMult ::= MULT variable
variable ::= ident [array]
array ::= LBRA expression RBRA
ident ::= IDENT
number ::= NUM
